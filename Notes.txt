=========================
Test Architecture 

Controller (Unit Tests). Object Level
	* Functionality Tests
	* Requires Mock/DI
Controller (Unit Tests). Class Level {optional}
	* Structure Test
	* Using Moq.Verify 
	* checks whether a specific method of dependent class (i.e. repository class) is called.

Controller (Integration Tests: Browser Level QA, includes javascript)
	* Functionality Tests
Controller (Integration Tests: REST, HTTP level)
	* Functionality Tests
Controller (Integration Tests: CLR)
	* Functionality Tests

Domain (Unit Tests) - Object Level 
	* Functionality Tests
	* whether a perticular error is triggered when a given domain property contains invalid value
Domain (Unit Tests) - Class Level {optional}
	* Structure Test
	* whether a particular attribute is set to a property

Repositories (Integration Tests)

Additional Tests ==========

Required Assembly Test
	* Structure Test
Client Side resources: image, java-script
	* Structure Test
Framework Test
	* Framework Test
	* Test some functionaity of a given framework (internal/external) to understand the implementation

=========================
Test Level
L1	* Functionality Test
L2	* Structure Test
	* Useful when we want a target system should use only a specific api regardless of functinalities remaining same
	* Useful when we want to early catch a bug that can cause functional bug before deploying
L3	* Framework Test
	* Tests a single class or utility in details that is being used by several callers.
	* For external api, it can be used to understand api behaviour
	* Example: generic repository

Test Objects
* Fake 
* Mock
* Stub

Mock Test Types
* Generic Mock Tests
* Record/Replay Tests
* Verify Tests
=========================